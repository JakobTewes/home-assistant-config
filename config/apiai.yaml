intents:
  GetTemperature:
    speech: We have {{ states.sensor.wohnzimmertemperatur_temperature }} degrees
    async_action: False
    action:
      service: notify.slack
      data_template:
        message: Api.ai has sent a request
  TurnLights:
    speech: Schalte {{ Room }} Licht {{ OnOff }}
    action:
      - service: notify.slack
        data_template:
          message: Someone asked via apiai to turn {{ Room }} lights {{ OnOff }}
      - service_template: >
          {%- if OnOff == "on" -%}
            switch.turn_on
          {%- else -%}
            switch.turn_off
          {%- endif -%}
        data_template:
          entity_id: "switch.light_{{ Room | replace(' ', '_') }}"
  GetWeather:
    speech: "Das Wetter: {{states.sensor.wetter_heute.state}}"

### Music
  music_stop:
      async_action: True
      action:
        - service: media_player.media_pause
          entity_id:
            - media_player.wohnzimmer
      speech: !include voice_confirm.yaml
  music_play:
    async_action: True
    action:
      - service: media_player.media_play
        entity_id:
          - media_player.wohnzimmer

  music_next:
    async_action: True
    action:
      - service: media_player.media_next_track
        entity_id:
          - media_player.wohnzimmer
  music_previous:
    async_action: True
    action:
      - service: media_player.media_previous_track
        entity_id:
          - media_player.wohnzimmer
  media_volume_set:
    async_action: True
    action:
      - service: media_player.volume_set
        entity_id:
          - media_player.wohnzimmer
        data_template:
          volume_level: "{{ float(number) / 100.0 }}"
  media_volume_up:
    async_action: True
    action:
      - service: media_player.volume_set
        entity_id:
          - media_player.wohnzimmer
        data_template:
          volume_level: "{{ float(states.media_player.wohnzimmer.attributes.volume_level) * 1.30 }}"
  media_volume_down:
    async_action: True
    action:
      - service: media_player.volume_set
        entity_id:
          - media_player.wohnzimmer
        data_template:
          volume_level: "{{ float(states.media_player.wohnzimmer.attributes.volume_level) * 0.60 }}"

  media_track_query:
    speech: "Es spielt: {{ states.media_player.wohnzimmer.attributes.media_title }}, von {{ states.media_player.wohnzimmer.attributes.media_artist }}."
    async_action: False
  alarm:
    speech: Setting alarm to {{ AlarmState }}
    async_action: true
    action:
      - service: notify.slack
        data_template:
          message: "[api.ai] {{ AlarmState }} alarm"
      - service_template: >
          {%- if AlarmState == "disarm" -%}
            script.alarm_disarm
          {%- else -%}
            script.alarm_arm_away
          {%- endif -%}
  staubsauger.go_home:
    speech: "Petsi ist derzeit {{ states('sensor.petsi_state') }}. Schicke ihn nach Hause."
    action:
      - service: switch.turn_on
        entity_id: switch.petsi_dock
  staubsauger.status:
    speech: "Petsi ist derzeit {{ states('sensor.petsi_state') }}."
    async_action: false
